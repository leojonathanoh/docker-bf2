#!/bin/sh
set -eu

usage() {
    echo "$0: Get and apply ESAI Strategies.ai in levels/<level>/server.zip"
    echo "Options:"
    echo "    -m|--mod                              Mod. E.g. 'bf2' or 'xpack'. Defaults to 'bf2'"
    echo "Commands:"
    echo "  get [subcommand]"
    echo "    gamemodes                             Get all available levels' gamemodes"
    echo "    level-strategies <level>              Get a level's server.zip's ESAI strategies"
    echo "                                          If <level> if omitted, all levels' strategies are shown"
    echo "    level-strategiescontent <level>       Get file content of level's server.zip's ESAI strategies"
    echo "                                          If <level> if omitted, all levels' strategies are shown"
    echo "    levels                                Get all available levels"
    echo "    mods                                  Get all available mods"
    echo "    strategies                            Get all available ESAI strategies"
    echo "  apply|delete [options] [arg...]"
    echo "      <level> <gamemode> <strategy>       Apply the specified ESAI strategy to a specified gamemode"
    echo "                                          of a specified level's server.zip"
    echo "      -f|--file <space_delimited_file>    Apply ESAI strategies based on a space-delimited file"
    echo "                                          Format per line: <level> <gamemode> <strategy>"
    echo "                                          Use '#' for comments"
    echo "Examples:"
    echo "  $0 -m bf2 get gamemodes "
    echo "  $0 -m xpack get gamemodes "
    echo "  $0 -m bf2 get level-strategies"
    echo "  $0 -m bf2 get level-strategiescontent"
    echo "  $0 -m bf2 get levels"
    echo "  $0 -m bf2 get mods"
    echo "  $0 -m bf2 get strategies"
    echo "  $0 -m bf2 apply highway_tampa gpm_cq/32 mediumFCA"
    echo "  $0 -m bf2 apply -f esai-optimized-strategies.txt"
    echo "  $0 -m bf2 delete highway_tampa gpm_cq/32 mediumFCA"
    echo "  $0 -m bf2 delete -f esai-optimized-strategies.txt"
}
# Exit if we got no options
if [ $# -eq 0 ]; then usage; exit 1; fi

# Get some options
while test $# -gt 0; do
    case "$1" in
        help|-h|--help)
            usage
            exit 0
            ;;
        -m|--mod)
            shift
            if test $# -gt 0; then
                MOD="$1"
                shift
            fi
            ;;
        get)
            shift
            if [ $# = 0 ]; then
                echo "Missing subcommand"
                usage
                exit 1
            fi
            case "$1" in
                gamemodes)
                    GET_GAMEMODES=1
                    shift
                    if [ "$#" -gt 0 ]; then
                        LEVEL="${1:-}"
                        shift
                    fi
                    ;;
                level-strategies)
                    GET_LEVEL_STRATEGIES=1
                    shift
                    if [ "$#" -gt 0 ]; then
                        LEVEL="${1:-}"
                        shift
                    fi
                    ;;
                level-strategiescontent)
                    GET_LEVEL_STRATEGIESCONTENT=1
                    shift
                    if [ "$#" -gt 0 ]; then
                        LEVEL="${1:-}"
                        shift
                    fi
                    ;;
                levels)
                    GET_LEVELS=1
                    shift
                    ;;
                mods)
                    GET_MODS=1
                    shift
                    ;;
                strategies)
                    GET_STRATEGIES=1
                    shift
                    ;;
            esac
            ;;
        apply|delete)
            if [ "$1" = 'apply' ]; then
                APPLY=1
            else
                DELETE=1
            fi
            shift
            if [ "$#" = 0 ]; then
                echo "Missing options or arguments"
                usage
                exit 1
            fi
            case "$1" in
                -f|--file)
                    shift
                    if [ "$#" -gt 0 ]; then
                        FILE="$1"
                        shift
                    fi
                    ;;
                *)
                    LEVEL="${1:-}"
                    if [ -z "$LEVEL" ]; then
                        echo "Please specify a level as the first argument. E.g. dalian_plant"
                        exit 1
                    fi
                    shift
                    GAMEMODE="${1:-}"
                    if [ -z "$GAMEMODE" ]; then
                        echo "Please specify a gamemode as the second argument. E.g. gpm_coop/16"
                        exit 1
                    fi
                    shift
                    STRATEGY="${1:-}"
                    if [ -z "$STRATEGY" ]; then
                        echo "Please specify an ESAI strategy as the third argument. E.g. mediumFCAPB"
                        exit 1
                    fi
                    shift
                    ;;
            esac
            ;;
        *)
            echo "Invalid option '$1'" 1>&2
            usage
            exit 1
            ;;
    esac
done

SERVER_DIR=${SERVER_DIR:-/server/bf2}
MOD=${MOD:-bf2} # Default mod is mods/bf2
GET_GAMEMODES=${GET_GAMEMODES:-}
GET_LEVEL_STRATEGIES=${GET_LEVEL_STRATEGIES:-}
GET_LEVEL_STRATEGIESCONTENT=${GET_LEVEL_STRATEGIESCONTENT:-}
GET_LEVELS=${GET_LEVELS:-}
GET_MODS=${GET_MODS:-}
GET_STRATEGIES=${GET_STRATEGIES:-}
APPLY=${APPLY:-}
DELETE=${DELETE:-}
FILE=${FILE:-}
LEVEL=${LEVEL:-}
GAMEMODE=${GAMEMODE:-}
STRATEGY=${STRATEGY:-}

# Validation
if [ ! -d "$SERVER_DIR/mods/$MOD" ]; then
    echo  "Invalid mod. Mod directory does not exist: $SERVER_DIR/mods/$MOD"
    exit 1
fi

if [ -n "$GET_GAMEMODES" ]; then
    SERVER_ZIPS=$( find "$SERVER_DIR" -path "*/mods/$MOD/levels/${LEVEL:-*}/server.zip" )
    for i in $( echo "$SERVER_ZIPS" | sort -n ); do
        LEVEL=$( echo "$i" | xargs dirname | xargs basename )
        for j in $( unzip -l "$i" | awk '{print $4}' | grep -E "GameModes/[^/]+/[0-9]+/.+" | cut -d '/' -f2-3 | sort -n | uniq || true ); do
            echo "$LEVEL $j"
        done
    done
fi

if [ -n "$GET_MODS" ]; then
    ls -1 "$SERVER_DIR/mods" | sort -n
fi

if [ -n "$GET_LEVELS" ]; then
    ls -1 "$SERVER_DIR/mods/$MOD/levels" | sort -n
fi

if [ -n "$GET_LEVEL_STRATEGIES" ]; then
    for i in $( find "$SERVER_DIR" -path "*/mods/$MOD/levels/${LEVEL:-*}/server.zip" ); do
        unzip -l "$i" | grep -E "GameModes/[^/]+/[0-9]+/[^/]+/Strategies.ai" | awk '{print $4}' | sort -n | uniq || true
    done
fi

if [ -n "$GET_LEVEL_STRATEGIESCONTENT" ]; then
    for i in $( find "$SERVER_DIR" -path "*/mods/$MOD/levels/${LEVEL:-*}/server.zip" ); do
        S=$( unzip -l "$i" | grep -E "GameModes/[^/]+/[0-9]+/[^/]+/Strategies.ai" | awk '{print $4}' | sort -n | uniq || true )
        unzip -p "$i" "$S"
    done
fi

if [ -n "$GET_STRATEGIES" ]; then
    cd "$SERVER_DIR"
    find . -path "*/mods/$MOD/ESAI/MapFiles/*/Strategies.ai" | cut -d '/' -f7 | sort -n
fi

if [ -n "$APPLY" ] || [ -n "$DELETE" ]; then
    # Validation
    if [ -n "$FILE" ]; then
        if [ ! -f "$FILE" ]; then
            echo "No such file: $FILE"
            exit 1
        fi
        CONTENT=$( cat "$FILE" | grep -v '#' | awk NF || true ) # Remove lines starting with '#' or trailing with '# ...', as well as blank lines
        if [ -z "$CONTENT" ]; then
            echo "No ESAI strategies to apply in: $FILE"
            exit 1
        fi
    else
        CONTENT="$LEVEL $GAMEMODE $STRATEGY"
    fi
    echo "$CONTENT" | while read -r LEVEL GAMEMODE STRATEGY; do
        SERVER_ZIP="$SERVER_DIR/mods/$MOD/levels/$LEVEL/server.zip"
        if ! unzip -l "$SERVER_ZIP" | grep "GameModes/$GAMEMODE" > /dev/null; then
            echo "The gamemode '$GAMEMODE' does not exist in $SERVER_ZIP"
            echo "To get a list of available gamemodes, run:"
            echo "   $0 get gamemodes"
            exit 1
        fi
        STRATEGIES_AI=$( find $SERVER_DIR | grep -E "mods/$MOD/ESAI/MapFiles/[^/]+/$STRATEGY/Strategies.ai" | head -n1 || true )
        if [ -z "$STRATEGIES_AI" ]; then
            echo "No such strategy: $STRATEGY"
            echo "To get a list of available strategies, run:"
            echo "   $0 get strategies"
            exit 1
        fi
    done
fi
if [ -n "$APPLY" ]; then
    echo "$CONTENT" | while read -r LEVEL GAMEMODE STRATEGY; do
        SERVER_ZIP="$SERVER_DIR/mods/$MOD/levels/$LEVEL/server.zip"
        STRATEGIES_AI=$( find $SERVER_DIR | grep -E "mods/$MOD/ESAI/MapFiles/[^/]+/$STRATEGY/Strategies.ai" | head -n1 || true )
        STRATEGIES_AI_DESTINATION="$SERVER_DIR/mods/$MOD/levels/$LEVEL/server/GameModes/$GAMEMODE/ai/Strategies.ai"
        echo "Applying strategy $STRATEGIES_AI to $SERVER_ZIP"
        mkdir -p "$( dirname "$STRATEGIES_AI_DESTINATION" )" # Same layout as content of server.zip
        cp -f "$STRATEGIES_AI" "$STRATEGIES_AI_DESTINATION"
        cd "$SERVER_DIR/mods/$MOD/levels/$LEVEL"
        zip -qru server.zip server
        rm -rf "$SERVER_DIR/mods/$MOD/levels/$LEVEL/server"
    done
fi
if [ -n "$DELETE" ]; then
    echo "$CONTENT" | while read -r LEVEL GAMEMODE STRATEGY; do
        SERVER_ZIP="$SERVER_DIR/mods/$MOD/levels/$LEVEL/server.zip"
        EXISTING_STRATEGIES_AI=$( unzip -l "$SERVER_ZIP" | grep -E "GameModes/$GAMEMODE/(ai|AI)/Strategies.ai" | awk '{print $4}' || true )
        if [ -n "$EXISTING_STRATEGIES_AI" ]; then
            for i in $EXISTING_STRATEGIES_AI; do
                echo "Removing existing strategy $i from $SERVER_ZIP"
                zip -q -d "$SERVER_ZIP" "$i"
            done
        else
            echo "No existing strategy in $SERVER_ZIP"
            exit 1
        fi
    done
fi
